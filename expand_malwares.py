import subprocess
import os
import shutil

def execute_program(path):
    try:
        subprocess.run([path])
    except FileNotFoundError:
        print("File not found")
    except subprocess.CalledProcessError as e:
        print(f"Error during program execution: {e}")


def execute_move(src, dest):
    try:
        subprocess.run(["mv", src, dest], shell=True)
        print(f"File moved to {dest}")
    except subprocess.CalledProcessError as e:
        print(f"Error during program execution: {e}")

def execute_copy(src, dest):
    try:
        subprocess.run(["cp", src, dest], shell=False)
        print(f"File {src} copied to {dest}")
    except subprocess.CalledProcessError as e:
        print(f"Error during program execution: {e}")

def main():
    #malware_dir = "/home/andrea/Scrivania/thesis/thesis-utils/vt/malwares"
    malware_dir = "/home/andrea/Scrivania/thesis/thesis-utils/vt/malwares_2"
    #malware_output_dir = "/home/andrea/Scrivania/thesis/thesis-utils/vt/expanded_malwares"
    malware_output_dir = "/home/andrea/Scrivania/thesis/thesis-utils/vt/malwares_3"
    list_of_files = [os.path.join(malware_dir, x) for x in os.listdir(malware_dir)] 
    list_of_files = filter(lambda x: (os.path.isfile(x) and (not x.startswith('.'))), list_of_files)
    list_of_files = sorted(list_of_files)
    # test object file to be executed on each malware
    test_file = "/home/andrea/Scrivania/thesis/morphVM/cmake-build-debug/test/test_expand_malware"
    test_resource_dir = "/home/andrea/Scrivania/thesis/morphVM/test/expand/malwares"

    for f in list_of_files:
        print(f"Processing {f}")
        cp_dest = os.path.join(test_resource_dir, os.path.basename(f))
        #execute_copy(f, cp_dest)
        shutil.copyfile(f, cp_dest)
        execute_program(test_file)
        mv_src = os.path.join(test_resource_dir, os.path.basename(f))
        mv_dest = os.path.join(malware_output_dir, os.path.basename(f))
        os.replace(mv_src, mv_dest)
        #execute_move(mv_src, mv_dest)

if __name__=="__main__":
    main()

